{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/Brouillon Doctegestion/Doctegestio finish/Front/src/components/Autocomplet.js\";\nimport React from \"react\";\nexport default class AutoCompletText extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.textChange = e => {\n      const value = e.target.value;\n      let suggesstions = [];\n\n      if (value.length > 0) {\n        const regex = new RegExp(`^${value}`, \"i\");\n        suggesstions = this.data.sort().filter(v => regex.test(v));\n      }\n\n      this.setState({\n        suggesstions,\n        text: value\n      });\n    };\n\n    this.suggesstionsSelected = value => {\n      this.setState({\n        text: value,\n        suggesstions: []\n      });\n    };\n\n    this.renderSuggestions = () => {\n      if (this.state.suggesstions.length === 0) {\n        return null;\n      }\n\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.state.suggesstions.map(data => React.createElement(\"li\", {\n        onClick: () => this.suggesstionsSelected(data),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, data)));\n    };\n\n    this.data = [\"Toto\", \"Dani\", \"Damien\", \"Shadd\", \"Jean\"];\n    this.state = {\n      suggesstions: [],\n      text: \"\"\n    };\n  }\n\n  render() {\n    const {\n      selectedCheckbox\n    } = this.props;\n    console.log(\"selectedCheckbox in Autocomplet\", selectedCheckbox);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: selectedCheckbox,\n      onChange: this.textChange,\n      placeholder: selectedCheckbox,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), this.renderSuggestions());\n  }\n\n}","map":{"version":3,"sources":["/Users/macbookpro/Desktop/Brouillon Doctegestion/Doctegestio finish/Front/src/components/Autocomplet.js"],"names":["React","AutoCompletText","Component","constructor","props","textChange","e","value","target","suggesstions","length","regex","RegExp","data","sort","filter","v","test","setState","text","suggesstionsSelected","renderSuggestions","state","map","render","selectedCheckbox","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,eAAN,SAA8BD,KAAK,CAACE,SAApC,CAA8C;AAC3DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,UATmB,GASNC,CAAC,IAAI;AAChB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAIE,YAAY,GAAG,EAAnB;;AAEA,UAAIF,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAsB;AACpB,cAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAY,IAAGL,KAAM,EAArB,EAAwB,GAAxB,CAAd;AACAE,QAAAA,YAAY,GAAG,KAAKI,IAAL,CAAUC,IAAV,GAAiBC,MAAjB,CAAwBC,CAAC,IAAIL,KAAK,CAACM,IAAN,CAAWD,CAAX,CAA7B,CAAf;AACD;;AACD,WAAKE,QAAL,CAAc;AACZT,QAAAA,YADY;AAEZU,QAAAA,IAAI,EAAEZ;AAFM,OAAd;AAID,KArBkB;;AAAA,SAuBnBa,oBAvBmB,GAuBIb,KAAK,IAAI;AAC9B,WAAKW,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEZ,KADM;AAEZE,QAAAA,YAAY,EAAE;AAFF,OAAd;AAID,KA5BkB;;AAAA,SA8BnBY,iBA9BmB,GA8BC,MAAM;AACxB,UAAI,KAAKC,KAAL,CAAWb,YAAX,CAAwBC,MAAxB,KAAmC,CAAvC,EAA0C;AACxC,eAAO,IAAP;AACD;;AACD,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKY,KAAL,CAAWb,YAAX,CAAwBc,GAAxB,CAA4BV,IAAI,IAC/B;AAAI,QAAA,OAAO,EAAE,MAAM,KAAKO,oBAAL,CAA0BP,IAA1B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqDA,IAArD,CADD,CADH,CADF;AAOD,KAzCkB;;AAEjB,SAAKA,IAAL,GAAY,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,EAA2B,OAA3B,EAAoC,MAApC,CAAZ;AACA,SAAKS,KAAL,GAAa;AACXb,MAAAA,YAAY,EAAE,EADH;AAEXU,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAoCDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAuB,KAAKrB,KAAlC;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,gBAA/C;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAEA,gBADT;AAEE,MAAA,QAAQ,EAAE,KAAKpB,UAFjB;AAGE,MAAA,WAAW,EAAEoB,gBAHf;AAIE,MAAA,IAAI,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOG,KAAKJ,iBAAL,EAPH,CADF;AAWD;;AA1D0D","sourcesContent":["import React from \"react\";\n\nexport default class AutoCompletText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = [\"Toto\", \"Dani\", \"Damien\", \"Shadd\", \"Jean\"];\n    this.state = {\n      suggesstions: [],\n      text: \"\"\n    };\n  }\n\n  textChange = e => {\n    const value = e.target.value;\n    let suggesstions = [];\n\n    if (value.length > 0) {\n      const regex = new RegExp(`^${value}`, \"i\");\n      suggesstions = this.data.sort().filter(v => regex.test(v));\n    }\n    this.setState({\n      suggesstions,\n      text: value\n    });\n  };\n\n  suggesstionsSelected = value => {\n    this.setState({\n      text: value,\n      suggesstions: []\n    });\n  };\n\n  renderSuggestions = () => {\n    if (this.state.suggesstions.length === 0) {\n      return null;\n    }\n    return (\n      <ul>\n        {this.state.suggesstions.map(data => (\n          <li onClick={() => this.suggesstionsSelected(data)}>{data}</li>\n        ))}\n      </ul>\n    );\n  };\n\n  render() {\n    const { selectedCheckbox } = this.props;\n    console.log(\"selectedCheckbox in Autocomplet\", selectedCheckbox);\n    return (\n      <div>\n        <input\n          value={selectedCheckbox}\n          onChange={this.textChange}\n          placeholder={selectedCheckbox}\n          type=\"text\"\n        />\n        {this.renderSuggestions()}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}