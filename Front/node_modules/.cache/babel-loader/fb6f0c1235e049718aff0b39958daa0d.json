{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/Brouillon Doctegestion/Doctegestio finish/Front/src/components/Autocomplet.js\";\nimport React from \"react\";\nexport default class AutoCompletText extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.textChange = e => {\n      const value = e.target.value;\n      let suggesstions = [];\n\n      if (value.length > 0) {\n        const regex = new RegExp(`^${value}`, \"i\");\n        suggesstions = this.data.sort().filter(v => regex.test(v));\n      }\n\n      this.setState({\n        suggesstions\n      });\n    };\n\n    this.renderSuggestions = () => {\n      if (this.state.suggesstions.length === 0) {\n        return null;\n      }\n\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.suggesstions.map(data => React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, data)));\n    };\n\n    this.data = [\"Toto\", \"Damien\", \"Shadd\", \"Jean\"];\n    this.state = {\n      suggesstions: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.textChange,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), this.renderSuggestions());\n  }\n\n}","map":{"version":3,"sources":["/Users/macbookpro/Desktop/Brouillon Doctegestion/Doctegestio finish/Front/src/components/Autocomplet.js"],"names":["React","AutoCompletText","Component","constructor","props","textChange","e","value","target","suggesstions","length","regex","RegExp","data","sort","filter","v","test","setState","renderSuggestions","state","map","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,eAAN,SAA8BD,KAAK,CAACE,SAApC,CAA8C;AAC3DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,UARmB,GAQNC,CAAC,IAAI;AAChB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAIE,YAAY,GAAG,EAAnB;;AAEA,UAAIF,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAsB;AACpB,cAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAY,IAAGL,KAAM,EAArB,EAAwB,GAAxB,CAAd;AACAE,QAAAA,YAAY,GAAG,KAAKI,IAAL,CAAUC,IAAV,GAAiBC,MAAjB,CAAwBC,CAAC,IAAIL,KAAK,CAACM,IAAN,CAAWD,CAAX,CAA7B,CAAf;AACD;;AACD,WAAKE,QAAL,CAAc;AACZT,QAAAA;AADY,OAAd;AAGD,KAnBkB;;AAAA,SAqBnBU,iBArBmB,GAqBC,MAAM;AACxB,UAAI,KAAKC,KAAL,CAAWX,YAAX,CAAwBC,MAAxB,KAAmC,CAAvC,EAA0C;AACxC,eAAO,IAAP;AACD;;AACD,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,YAAL,CAAkBY,GAAlB,CAAsBR,IAAI,IACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAL,CADD,CADH,CADF;AAOD,KAhCkB;;AAEjB,SAAKA,IAAL,GAAY,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,EAA4B,MAA5B,CAAZ;AACA,SAAKO,KAAL,GAAa;AACXX,MAAAA,YAAY,EAAE;AADH,KAAb;AAGD;;AA4BDa,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,QAAQ,EAAE,KAAKjB,UAAtB;AAAkC,MAAA,IAAI,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEG,KAAKc,iBAAL,EAFH,CADF;AAMD;;AA1C0D","sourcesContent":["import React from \"react\";\n\nexport default class AutoCompletText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = [\"Toto\", \"Damien\", \"Shadd\", \"Jean\"];\n    this.state = {\n      suggesstions: []\n    };\n  }\n\n  textChange = e => {\n    const value = e.target.value;\n    let suggesstions = [];\n\n    if (value.length > 0) {\n      const regex = new RegExp(`^${value}`, \"i\");\n      suggesstions = this.data.sort().filter(v => regex.test(v));\n    }\n    this.setState({\n      suggesstions\n    });\n  };\n\n  renderSuggestions = () => {\n    if (this.state.suggesstions.length === 0) {\n      return null;\n    }\n    return (\n      <ul>\n        {this.suggesstions.map(data => (\n          <li>{data}</li>\n        ))}\n      </ul>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <input onChange={this.textChange} type=\"text\" />\n        {this.renderSuggestions()}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}