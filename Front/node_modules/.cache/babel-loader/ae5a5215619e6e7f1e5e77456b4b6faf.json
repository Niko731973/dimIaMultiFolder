{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/Brouillon Doctegestion/Doctegestio finish/Front/src/components/Autocomplet.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nexport default class AutoCompletText extends React.Component {\n  constructor(props) {\n    super(props); // this.data = [];\n\n    this.textChange = e => {\n      const value = e.target.value;\n      let suggesstions = [];\n\n      if (value.length > 0) {\n        const regex = new RegExp(`^\\\\(${value}`, \"i\");\n        const regex2 = new RegExp(`^\\\\(.*\\\\) .*${value}`, \"i\");\n        suggesstions = this.state.data.sort().filter(v => regex.test(v) || regex2.test(v));\n      }\n\n      this.setState({\n        suggesstions,\n        text: value\n      });\n    };\n\n    this.suggesstionsSelected = value => {\n      this.setState({\n        text: value,\n        suggesstions: []\n      });\n    };\n\n    this.componentDidMount = () => {\n      axios.post(\"http://localhost:3001/auto\").then(res => {\n        console.log(res.data);\n        let dataDiag = res.data.diag;\n        this.setState({\n          data: dataDiag\n        });\n      });\n    };\n\n    this.renderSuggestions = () => {\n      if (this.state.suggesstions.length === 0) {\n        return null;\n      }\n\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.state.suggesstions.map(data => React.createElement(\"li\", {\n        onClick: () => this.suggesstionsSelected(data),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, data)));\n    };\n\n    this.state = {\n      suggesstions: [],\n      text: \"\",\n      data: []\n    };\n  }\n\n  render() {\n    console.log(this.state.suggesstions, \"TETS\");\n    const {\n      selectedCheckbox\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.text,\n      onChange: this.textChange,\n      id: \"formGroupExampleInput\",\n      placeholder: selectedCheckbox[0].diag,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), this.renderSuggestions());\n  }\n\n}","map":{"version":3,"sources":["/Users/macbookpro/Desktop/Brouillon Doctegestion/Doctegestio finish/Front/src/components/Autocomplet.js"],"names":["React","axios","AutoCompletText","Component","constructor","props","textChange","e","value","target","suggesstions","length","regex","RegExp","regex2","state","data","sort","filter","v","test","setState","text","suggesstionsSelected","componentDidMount","post","then","res","console","log","dataDiag","diag","renderSuggestions","map","render","selectedCheckbox"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nexport default class AutoCompletText extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // this.data = [];\n    this.state = {\n      suggesstions: [],\n      text: \"\",\n      data: []\n    };\n  }\n\n  textChange = e => {\n    const value = e.target.value;\n    let suggesstions = [];\n\n    if (value.length > 0) {\n      const regex = new RegExp(`^\\\\(${value}`, \"i\");\n      const regex2 = new RegExp(`^\\\\(.*\\\\) .*${value}`, \"i\");\n      suggesstions = this.state.data\n        .sort()\n        .filter(v => regex.test(v) || regex2.test(v));\n    }\n    this.setState({\n      suggesstions,\n      text: value\n    });\n  };\n\n  suggesstionsSelected = value => {\n    this.setState({\n      text: value,\n      suggesstions: []\n    });\n  };\n\n  componentDidMount = () => {\n    axios.post(\"http://localhost:3001/auto\").then(res => {\n      console.log(res.data);\n      let dataDiag = res.data.diag;\n      this.setState({\n        data: dataDiag\n      });\n    });\n  };\n\n  renderSuggestions = () => {\n    if (this.state.suggesstions.length === 0) {\n      return null;\n    }\n    return (\n      <ul>\n        {this.state.suggesstions.map(data => (\n          <li onClick={() => this.suggesstionsSelected(data)}>{data}</li>\n        ))}\n      </ul>\n    );\n  };\n\n  render() {\n    console.log(this.state.suggesstions, \"TETS\");\n    const { selectedCheckbox } = this.props;\n\n    return (\n      <div>\n        <input\n          value={this.state.text}\n          onChange={this.textChange}\n          id=\"formGroupExampleInput\"\n          placeholder={selectedCheckbox[0].diag}\n          type=\"text\"\n        />\n        {this.renderSuggestions()}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}